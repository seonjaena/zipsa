spring:

  servlet:
    multipart:
      max-file-size: 2048MB
      max-request-size: 2048MB

  devtools:
    restart:
      enabled: true

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

logging:
  level:
    com:
      amazonaws:
        util:
          EC2MetadataUtils: error
  config: classpath:logback-spring.xml

local:
  win:
    dir-prefix: C:/Users/sky11/zipsa-files
  linux:
    dir-prefix: /root/zipsa-files
  mac:
    dir-prefix: /Users/naseonjae/zipsa-files


token:
  # 5분 (1000 * 60 * 5 = 300000) / 30분 (1000 * 60 * 30 = 1800000) / 1시간 (1000 * 60 * 60 = 3600000)
  access-expire: 1800000
  # 1일 (1000 * 60 * 24 = 1440000) / 1달 (1000 * 60 * 24 * 31 = 44640000)
  refresh-expire: 1440000

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus

---

spring:
  config:
    activate:
      on-profile: dev

  datasource:
    url: ${DB_URL:jdbc:mariadb://mariadb-ver10-01.c3edzk8fothj.ap-northeast-2.rds.amazonaws.com:3306/ZIPSA_DEV?characterEncoding=UTF-8&serverTimezone=Asia/Seoul&useUnicode=true}
    username: ${DB_USERNAME:admin}
    password: ${DB_PASSWORD:Na6080su12!!}
    driver-class-name: org.mariadb.jdbc.Driver

  jpa:
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        default_batch_fetch_size: 100
        show_sql: true
        format_sql: true
    open-in-view: false

  rabbitmq:
    host: ${RABBITMQ_HOST:144.24.83.179}
    port: ${RABBITMQ_PORT:5672'}
    virtualhost: ${RABBITMQ_VIRTUAL_HOST:/}
    username: ${RABBITMQ_USERNAME:sky114z}
    password: ${RABBITMQ_PASSWORD:na6080su12!@}
    dead-log-queue: dead-log-queue
    dead-log-exchange: dead-log-exchange
    dead-log-routingkey: dead-log-queue
    log-queue: log-queue
    log-exchange: log-exchange
    log-routingkey: log-queue

  redis:
    host: ${REDIS_HOST:144.24.83.179}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:na6080su12!@}

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    dynamodb:
      endpoint: ${DYNAMO_ENDPOINT}
    region:
      static: ${AWS_REGION}
    s3:
      bucket: ${S3_BUCKET}
      dir-prefix: ${S3_DIR_PREFIX}
    stack:
      auto: false


---

spring:
  config:
    activate:
      on-profile: prod

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.mariadb.jdbc.Driver

  jpa:
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        default_batch_fetch_size: 100
        show_sql: true
    open-in-view: false

  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    virtualhost: ${RABBITMQ_VIRTUAL_HOST}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
    dead-log-queue: dead-log-queue
    dead-log-exchange: dead-log-exchange
    dead-log-routingkey: dead-log-queue
    log-queue: log-queue
    log-exchange: log-exchange
    log-routingkey: log-queue

  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    password: ${REDIS_PASSWORD}

cloud:
  aws:
    dynamodb:
      endpoint: ${DYNAMO_ENDPOINT}
    region:
      static: ${AWS_REGION}
    s3:
      bucket: ${S3_BUCKET}
      dir-prefix: ${S3_DIR_PREFIX}
    stack:
      auto: false