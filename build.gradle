plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'distribution'
}

group = 'com.project'
version = '1.0.0'
sourceCompatibility = '11'

jar {
	enabled = false
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://s3-us-west-2.amazonaws.com/dynamodb-local/release' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-json'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'com.amazonaws.secretsmanager:aws-secretsmanager-jdbc:1.0.8'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	implementation 'org.apache.commons:commons-lang3'
	implementation group: 'ca.pjer', name: 'logback-awslogs-appender', version: '1.6.0'
	implementation group: 'org.fusesource.jansi', name: 'jansi', version: '2.4.0'
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	implementation group: 'com.google.api-client', name: 'google-api-client', version: '1.33.2'
	implementation group: 'org.json', name: 'json', version: '20211205'
	implementation group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: '1.12.231'
	implementation 'org.projectlombok:lombok'
	implementation group: 'org.apache.commons', name: 'commons-pool2', version: '2.11.1'
	implementation 'org.mariadb.jdbc:mariadb-java-client'
	implementation group: 'net.nurigo', name: 'javaSDK', version: '2.2'
	implementation 'com.google.firebase:firebase-admin:9.0.0'
	implementation 'com.amazonaws:DynamoDBLocal:1.11.119'
	implementation ('it.ozimov:embedded-redis:0.7.3') { exclude group: "org.slf4j", module: "slf4j-simple" }
//	implementation "com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0"

	// queryDSL 설정
	implementation "com.querydsl:querydsl-jpa"
	implementation "com.querydsl:querydsl-core"
	implementation "com.querydsl:querydsl-collections"
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
	annotationProcessor "jakarta.annotation:jakarta.annotation-api" // java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
	annotationProcessor "jakarta.persistence:jakarta.persistence-api" // java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드


	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'com.github.fridujo:rabbitmq-mock:1.2.0'
	testImplementation 'org.springframework.ws:spring-ws-test'
	testImplementation 'com.h2database:h2'
	testImplementation "org.testcontainers:testcontainers:1.17.6"
	testImplementation "org.testcontainers:junit-jupiter:1.17.6"
	testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.3.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation 'org.springframework.security:spring-security-test'
	// https://mvnrepository.com/artifact/com.amazonaws/DynamoDBLocal
}

test {
	useJUnitPlatform()
}

def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}
